server:
  port: 9000

spring:
  application:
    name: "cards"
  profiles:
    active: "qa"
  datasource:
    url: jdbc:mysql://localhost:3309/cardsdb
    username: root
    password: password
  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  #    This tells springboot where is our config server located,
  #  When we do some configuration changes in github while our services are running, then to reflect those changes
  #  we have to enable actuator endpoints in the service and hit one specific endpoint called refresh
  #  eg:- http://localhost:9000/actuator/refresh is the endpoint for this service
  #  this is not a feasible option because lets say if we have many instances of our service then we have to refresh all
  #  the instances
  config:
    import: "optional:configserver:http://localhost:8071/"
#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    stream:
#      username: "guest"
#      password: "guest"

#This will enable all the endpoints given by the actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  #  With the help of this property we are telling to the micrometer and Prometheus, please group all my metrics related to the
  #  accounts microservice under the application name, which is cards. This is going to help you to identify the metrics of
  #  each of the microservice. Otherwise, you cannot really identify which metrics belongs to which microservice.
  metrics:
    tags:
      application: ${spring.application.name}


endpoints:
  shutdown:
    enabled: true


eureka:
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/

#This info will be shown on the eureka dashboard for this service
info:
  app:
    name: "cards"
    description: "Rakesh Bank Cards Application"
    version: "1.0.0"


logging:
  level:
    com:
      rakesh:
        cards: DEBUG
