server:
  port: 8071

spring:
  application:
    name: "configserver"
  profiles:
    active: git
  cloud:
    config:
      server:
        git:
          uri: "https://github.com/rakeshpal685/MicroservicesWithDevopconfigAndCloud.git"
          default-label: "master"
          timeout: 5
          clone-on-start: true
          force-pull: true
#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    username: "guest"
#    password: "guest"

#the encrypt key is used to encrypt our username and password and other things present in .properties file in the GIT
#this key can be kept in vault, After giving the encrypted key here do a POST request to http://localhost:8071/encrypt
#and give your username,password or anything you want to be encrypted as a body to get the encrypted value and paste the values in the git config file one by one
#Use {cypher} in front of them so that my server can automatically decrypt the values while reading,
#eg:- https://github.com/rakeshpal685/MicroservicesWithDevopconfigAndCloud/blob/master/accounts-prod.yml
encrypt:
  key: "45D81EC1EF61DF9AD8D3E5BB397F9"


#The liveness-state and readiness-state is used in docker container to check that whether the configserver container
#is up and running or not before other containers are created which depends on the configserver
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true


eureka:
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/

#This info will be shown on the eureka dashboard for this service
info:
  app:
    name: "configurationserver"
    description: "Rakesh Bank Configuration Application"
    version: "1.0.0"

logging:
  level:
    com:
      rakesh:
        configserver: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"